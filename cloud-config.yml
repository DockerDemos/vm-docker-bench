---
coreos:
  units:
    - name: partition-disk.service
      command: start
      content: |
        [Unit]
        Description=Partitions the primary hd
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sda'
    - name: format-disk.service
      command: start
      content: |
        [Unit]
        Description=Formats the primary drive
        Requires=partition-disk.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/sda1
        ExecStart=/usr/sbin/mkfs.btrfs -f /dev/sda1
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount primary hd to /var/lib/docker
        Requires=format-disk.service
        Before=docker.service
        [Mount]
        What=/dev/sda1
        Where=/var/lib/docker
        Type=btrfs

write_files:
  - path: /tmp/bench/boot_ssp.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository
      # server for ease of testing.
      # It can be built from the Docker files at
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/webbench
      #
      # Starts N number of Docker containers running
      # Apache and a basic PHP "Hello World" file.
      #
      COUNT="$1"
      docker pull $REPO/bench-webbench
      for i in {1..$COUNT} ; do docker run -i -t $REPO/bench-webbench ; done
      
  - path: /tmp/bench/reboot.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository
      # server for ease of testing.
      # It can be built from the Docker files at
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/webbench
      #
      # Starts 15 of Docker containers running
      # Apache and a basic PHP "Hello World" file.
      #
      COUNT="15"
      docker pull $REPO/bench-webbench
      for n in {1..5} ; do
        for i in {1..$COUNT} ; do docker run -rm -i -t $REPO/bench-webbench ; done
        sleep 15m
        docker ps | awk '{print $1}' |xargs docker stop
        sleep 30s
      done 

  - path: /tmp/bench_cpu.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository 
      # server for ease of testing.
      # It can be built from the Docker files at 
      # https://github.com/DockerDemos/vm-docker-bench\sysbench
      #
      # Tests CPU calculations by running a prime number 
      # calculation benchmark test in 100 Docker 
      # containers, serially.
      docker pull $REPO/bench-sysbench
      for i in {1..100} ; do docker run -i -t $REPO/bench-sysbench \
      --test=cpu --cpu-max-prime=20000 run |grep total\ time\: \
      | awk '{print $3}'| sed -i 's/s//g' ; done`

  - path: /tmp/bench_mysql.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository 
      # server for ease of testing.
      # It can be built from the Docker files at 
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/sysbench-mysql
      #
      # Tests MySQL performance with read, write and transaction
      # tests in 100 Docker containers, serially.
      docker pull $REPO/bench-sysbench-mysql
      for i in {1..100} ; do docker run -i -t $REPO/bench-sysbench-mysql 
      done

  - path: /tmp/bench_io.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository 
      # server for ease of testing.
      # It can be built from the Docker files at 
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/sysbench
      #
      # Tests disk IO with a combined *Random Read and Write*
      # test in 100 Docker containers, serially.
      docker pull $REPO/bench-sysbench
      for i in {1..100} ; do docker run -i -t $REPO/bench-sysbench \
      /bench/io.sh 5G \ 
      |grep total\ time\: \
      | awk '{print $3}'| sed -i 's/s//g' ; done

  - path: /tmp/bench_io_mod.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository 
      # server for ease of testing.
      # It can be built from the Docker files at 
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/sysbench
      #
      # Tests disk IO with a combined *Random Read and Write*
      # test in 100 Docker containers, serially, with a 
      # 512MB memory limit enforced on the containers.
      docker pull $REPO/bench-sysbench
      for i in {1..100} ; do docker run -i -t -m=524288 $REPO/bench-sysbench \
      /bench/io.sh 5G \ 
      |grep total\ time\: \
      | awk '{print $3}'| sed -i 's/s//g' ; done

  - path: /tmp/bench_app_blog.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository
      # server for ease of testing.
      # It can be built from the Docker files at
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/blogbench
      #
      # Tests file I/O operations simulating a 
      # real-world server.
      docker pull $REPO/bench-blogbench
      for i in {1..100} ; do docker run -i -t $REPO/bench-blogbench \
      -c 30 -i 20 -r 40 -W 5 -w 5 --directory=/srv ; done

  - path: /tmp/bench_app_ab.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # This image was uploaded to our private repository
      # server for ease of testing.
      # It can be built from the Docker files at
      # https://github.com/DockerDemos/vm-docker-bench/tree/master/webbench
      #
      # Starts N number of Docker containers running
      # Apache and a basic PHP "Hello World" file.
      #
      docker pull $REPO/bench-webbench
      docker run -d -p 80:80 $REPO/bench-webbench 
